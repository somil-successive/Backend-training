"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.dataRouter = void 0;
const express_1 = __importDefault(require("express"));
const authMiddleware_1 = require("../middleware/authMiddleware");
const dataController_1 = require("../controllers/dataController");
const customLogsMiddleware_1 = require("../middleware/customLogsMiddleware");
const customHeaderMiddleware_1 = require("../middleware/customHeaderMiddleware");
const limitingReqMiddleware_1 = require("../middleware/limitingReqMiddleware");
const checkNumParamMiddleware_1 = require("../middleware/checkNumParamMiddleware");
const geoLocMiddleware_1 = require("../middleware/geoLocMiddleware");
const dynamicValidationMiddleware_1 = require("../middleware/dynamicValidationMiddleware");
const loginController_1 = require("../controllers/loginController");
const registerController_1 = require("../controllers/registerController");
const asyncController_1 = require("../controllers/asyncController");
const paramValidationMiddleware_1 = require("../middleware/paramValidationMiddleware");
const paramController_1 = require("../controllers/paramController");
exports.dataRouter = express_1.default.Router();
exports.dataRouter.get("/get", geoLocMiddleware_1.geoLocMiddleware, limitingReqMiddleware_1.limitingReqMiddleware, (0, customHeaderMiddleware_1.customHeaderMiddleware)({ content: "Text" }), customLogsMiddleware_1.customLogsMiddleware, authMiddleware_1.authMiddleware, checkNumParamMiddleware_1.checkNumParamMiddleware, dataController_1.getData);
exports.dataRouter.post("/post", limitingReqMiddleware_1.limitingReqMiddleware, (0, customHeaderMiddleware_1.customHeaderMiddleware)({ content: "Html" }), customLogsMiddleware_1.customLogsMiddleware, dataController_1.postData);
exports.dataRouter.post("/login", dynamicValidationMiddleware_1.dynamicValidationMiddleware, loginController_1.login);
exports.dataRouter.post("/register", dynamicValidationMiddleware_1.dynamicValidationMiddleware, registerController_1.register);
exports.dataRouter.get("/async", asyncController_1.asyncData);
exports.dataRouter.get("/:id", paramValidationMiddleware_1.paramValidationMiddleware, paramController_1.paramController);
